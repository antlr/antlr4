digraph "" {
    graph[dpi="60";compound="true"];

    subgraph clusterA {
        label="";
        color="invis";
        {   rank="same";
            node[shape="invtriangle";margin="0.01,0.01"];
            A_u1[label="u"];
            A_v1[label="v"];
        }

        A_left[shape="record";label="{<a> | a} | {<b> | b}"];

        {   edge[dir="back"];
            A_u1:s -> A_left:a:n;
            A_v1:s -> A_left:b:n;
        }
    }

    subgraph AB {
        temp0[color="invis";shape="point";label=""];
        temp1[shape="none";label="+"];
        temp0 -> temp1[style="invisible";dir="none"];
    }

    subgraph clusterB {
        label="";
        color="invis";
        {   rank="same";
            node[shape="invtriangle";margin="0.01,0.01"];
            A_w1[label="v"];
            A_x1[label="u"];
        }

        A_right[shape="record";label="{<b> | b} | {<d> | d}"];

        {   edge[dir="back"];
            A_w1:s -> A_right:b:n;
            A_x1:s -> A_right:d:n;
        }
    }

    subgraph BC {
        node[color="invis";shape="point"];
        temp2a;
        {   rank="same";
            temp2b;
            temp2c;
        }

        temp2a -> temp2b[style="invisible";dir="none"];
        temp2a -> temp2c[style="invisible";dir="none"];
        temp2b -> temp2c[constraint="false";label="wwwwwww"];
    }

    subgraph clusterC {
        label="";
        color="invis";
        subgraph clusterSubC {
            node[group="";shape="invtriangle";margin="0.01,0.01"];
            A_u2[label="u"];
            {   rank="same";
                A_ut1[color="invis";shape="point";width="0.00000001"];
                A_v2[label="v"];
                A_ut2[color="invis";shape="point";width="0.00000001"];
            }

            A_ut1 -> A_v2 -> A_ut2[style="invisible",dir="none"];
            A_u2 -> A_v2[style="invisible",dir="none"];
        }

        A_result[shape="record";label="{<a> | a} | {<b> | b} | {<d> | d}"];

        {   edge[dir="back"];
            A_u2:sw -> A_ut1:n;
            A_v2:s -> A_result:b:n;
            A_u2:se -> A_ut2:n;
            A_v2:s -> A_result:n[style="invisible",dir="none"];
        }

        {   edge[dir="none";constraint="false"];
            A_ut1:s -> A_result:a:n;
            A_ut2:s -> A_result:d:n;
        }
    }
}
