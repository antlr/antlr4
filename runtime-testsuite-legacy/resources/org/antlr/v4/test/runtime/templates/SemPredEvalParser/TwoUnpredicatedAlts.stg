// We have n-2 predicates for n alternatives. pick first alt

TestType() ::= "Parser"

Options ::= [
	"Debug": true
]

Grammar ::= [
	"T": {<grammar("T")>}
]

Input() ::= "x; y"

Rule() ::= "s"

Output() ::= <<
alt 1
alt 1<\n>
>>

Errors() ::= <<
line 1:0 reportAttemptingFullContext d=0 (a), input='x'
line 1:0 reportAmbiguity d=0 (a): ambigAlts={1, 2}, input='x'
line 1:3 reportAttemptingFullContext d=0 (a), input='y'
line 1:3 reportAmbiguity d=0 (a): ambigAlts={1, 2}, input='y'<\n>
>>

grammar(grammarName) ::= <<
grammar <grammarName>;
s : {<LL_EXACT_AMBIG_DETECTION()>} a ';' a; // do 2x: once in ATN, next in DFA
a : ID {<writeln("\"alt 1\"")>}
  | ID {<writeln("\"alt 2\"")>}
  | {<False()>}? ID {<writeln("\"alt 3\"")>}
  ;
ID : 'a'..'z'+ ;
INT : '0'..'9'+;
WS : (' '|'\n') -> skip ;
>>
