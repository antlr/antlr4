TestType() ::= "CompositeParser"

Grammar ::= [
	"M": {<masterGrammar("M", "S")>}
]

SlaveGrammars ::= [
	"S": {<slaveGrammar("S")>}
]

Rule() ::= "s"

Input() ::= "b"

Output() ::= <<
S.ab<\n>
>>

Errors() ::= ""

masterGrammar(grammarName, slaveGrammarName) ::= <<
grammar M;
import S;
s : a {<write("$a.text")>} ;
B : 'b' ; // defines B from inherited token space
WS : (' '|'\n') -> skip ;
>>

slaveGrammar(grammarName) ::= <<
parser grammar S;
a : B {<write("\"S.a\"")>} ;
>>
