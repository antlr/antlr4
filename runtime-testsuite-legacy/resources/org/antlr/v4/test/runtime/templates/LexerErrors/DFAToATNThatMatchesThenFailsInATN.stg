// The first ab caches the DFA then abx goes through the DFA but
// into the ATN for the c.  It marks that hasn't except state
// and then keeps going in the ATN. It fails on the x, but
// uses the previous accepted in the ATN not DFA

TestType() ::= "Lexer"

Grammar ::= [
	"L": {<grammar("L")>}
]

Input() ::= "ababcx"

Output() ::= <<
[@0,0:1='ab',\<1>,1:0]
[@1,2:4='abc',\<2>,1:2]
[@2,6:5='\<EOF>',\<-1>,1:6]<\n>
>>

Errors() ::= <<
line 1:5 token recognition error at: 'x'<\n>
>>

grammar(grammarName) ::= <<
lexer grammar <grammarName>;
A : 'ab' ;
B : 'abc' ;
C : 'abcd' ;
>>
