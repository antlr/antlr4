[type]
Parser

[grammar]
grammar T;
s @after {<ToStringTree("$ctx"):writeln()>} : e EOF ; // must indicate EOF can follow
e : e '.' ID
  | b
  | m
  | e '*' e
  | e ('+'|'-') e
  | INT
  | ID
  ;
b : '(' e ')';
m : '-' e;
ID : 'a'..'z'+ ;
INT : '0'..'9'+ ;
WS : (' '|'\n') -> skip ;

[start]
s

[input]
-(-a+b)+c

[output]
"""(s (e (e (m - (e (b ( (e (e (m - (e a))) + (e b)) ))))) + (e c)) <EOF>)
"""

