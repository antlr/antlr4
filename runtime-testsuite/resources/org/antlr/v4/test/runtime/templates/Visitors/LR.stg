TestType() ::= "Parser"

Options ::= [
	"Debug": false
]

Grammar ::= [
	"T": {<grammar("T")>}
]

Input() ::= "1+2*3"

Rule() ::= "s"

Output() ::= <<
(e (e 1) + (e (e 2) * (e 3)))
1,,2,,32 3 21 2 1<\n>
>>

Errors() ::= ""

grammar(grammarName) ::= <<
grammar <grammarName>;
@parser::header {
<ImportVisitor(grammarName)>
}

@parser::members {
<LRVisitor(grammarName)>
}

s
@after {
<ToStringTree("$ctx.r"):writeln()>
<WalkVisitor("$ctx.r")>
}
	: r=e ;
e : e op='*' e
	| e op='+' e
	| INT
	;
MULT: '*' ;
ADD : '+' ;
INT : [0-9]+ ;
ID  : [a-z]+ ;
WS : [ \t\n]+ -> skip ;
>>
